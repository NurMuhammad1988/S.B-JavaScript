{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;AAAA,iNAAiN,wBAAwB;AACzO;AACY;AACZ;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACO;AACS;AAChB;AACA;AACA;AACe;AACf;AACA,EAAE;;;;;;UCjBF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA,iNAAiN,wBAAwB;AACzO;AACa;AACb;AACA;AACA,WAAW,UAAU;AACrB;AACA,yBAAyB;AACzB;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+B;AAC/B;AACA,eAAe,2CAAa,CAAC,IAAI,4CAAc,CAAC,GAAG,6CAAY,CAAC,GAAG,IAAI,cAAc,+F","sources":["webpack://3-mdul-loyiha-form-json-with-the-xampp-with-the-server-json/./src/main.js","webpack://3-mdul-loyiha-form-json-with-the-xampp-with-the-server-json/webpack/bootstrap","webpack://3-mdul-loyiha-form-json-with-the-xampp-with-the-server-json/webpack/runtime/define property getters","webpack://3-mdul-loyiha-form-json-with-the-xampp-with-the-server-json/webpack/runtime/hasOwnProperty shorthand","webpack://3-mdul-loyiha-form-json-with-the-xampp-with-the-server-json/webpack/runtime/make namespace object","webpack://3-mdul-loyiha-form-json-with-the-xampp-with-the-server-json/./src/script.js"],"sourcesContent":["//<!-- //eslatma: yani webpack qilinganda webpackni default nastroykasida bundle.js papkasi bor shu papkani loyihani html papkasiga chaqirib qo'yish kerak yani script jsda shu bundle.js papkasi bo'lishi kerak{html file ohiriga qara} //yani distni ichida boladi bundle.js   -->\r\n\r\n\"use strict\"\r\n\r\n// //bu export qilishni birinchi yo'li\r\n// const firstVar = \"Hello\"\r\n// export{firstVar}\r\n\r\n// //bu export qilishni ikkinchi yo'li\r\nconst firstVar = \"Hello\"\r\nexport const secondVar= \"hello world\"//yani buni o'zi alohida yo'li ekan huddi shunday qilib exportni ichidayoq o'zgaruvchi ochib boshqa failga export qilish mumkun ekan\r\nexport{firstVar}\r\n\r\n//bu export qilishni uchinchi yo'li\r\n\r\nexport default function logger () {\r\n    console.log(\"Console log\");\r\n} //bu yo'l bilan yani export default function logger () deb yozish yo'li bilan main.js failidan faqat bir martta funcsiya jo'natishimiz mumkun agar bir nechta funcsiyalar jo'natish kerak bolsa export yasni birinchi ikkinchi yollaridan foydalangan maqul","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//<!-- //eslatma: yani webpack qilinganda webpackni default nastroykasida bundle.js papkasi bor shu papkani loyihani html papkasiga chaqirib qo'yish kerak yani script jsda shu bundle.js papkasi bo'lishi kerak{html file ohiriga qara} //yani distni ichida boladi bundle.js   -->\r\n\r\n\"use strict\";\r\n\r\n//bu import qilishni birinchi yo'li\r\n// import {firstVar} from \"./main\";\r\n\r\n// console.log(firstVar);//bunda run code qilinganda bundle.jsdan hello chiqarkan\r\n\r\n// //bu import qilishni ikkinchi yo'li\r\n// import {firstVar,secondVar} from \"./main\";\r\n\r\n// console.log(firstVar);//bunda run code qilinganda bundle.jsdan hello chiqarkan\r\n// console.log(secondVar);\r\n\r\n\r\n//bu import qilishni uchinchi yo'li\r\n// import logger from \"./main\";\r\n// logger()\r\n\r\n//bu umumiy yo'li yani bir nechta funcsiyani import qilganda masalan bitta main nomli filedan import qilganda bitta o'zgaruvchiga olish mumkun concole logga qara va qaytadan yozib (qavus ichidagi yozilishga tayyor funcsyalarni tekshir) \r\nimport * as main  from \"./main\"\r\n\r\nconsole.log(`${main.firstVar}, ${main.secondVar}.${main.default}`);//${main.default} bu faqat bir martta export va inport qilinadigamn funcsiya main.jsda yozilgan logger funcsiyasi"],"names":[],"sourceRoot":""}